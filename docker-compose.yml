version: "3.9"

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    deploy:
      restart_policy:
        condition: on-failure
  broker:
    image: confluentinc/cp-kafka:7.0.1
    hostname: broker
    container_name: broker
    ports:
      - "9092:9092"
      - "9101:9101"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_CREATE_TOPICS: "glo.bc.transfer.request.0"
    depends_on:
      - zookeeper
    healthcheck:
      test:
        [ "CMD", "kafka-topics.sh", "--list", "--zookeeper", "zookeeper:2181" ]
      interval: 30s
      timeout: 10s
      retries: 4
  kowl:
    image: quay.io/cloudhut/kowl:master
    restart: always
    container_name: kowl
    hostname: kowl
    volumes:
      - ./docker/kowl.yaml:/etc/kowl/config.yaml
    ports:
      - "8888:8080"
    entrypoint: ./kowl --config.filepath=/etc/kowl/config.yaml
    depends_on:
      - broker
  redis:
    container_name: redis
    image: redislabs/redismod
    ports:
      - "6379:6379"